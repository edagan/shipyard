# This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: golang
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
services:
    - id: rethinkdb
#          tag: latest
#    - id: swarm
      
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongodb
    # http://devcenter.wercker.com/docs/services/mongodb.html

    
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - setup-go-workspace:
        package-dir: github.com/shipyard/shipyard

    # Gets the dependencies
    - script:
        name: go get
        code: |
          bash < <(curl -s -S -L https://deb.nodesource.com/setup_5.x)
          apt-get update && apt-get install -y bash curl bison nodejs
          npm install bower -g
          go get github.com/tools/godep
          curl -L https://github.com/docker/compose/releases/download/1.6.0/docker-compose-`uname -s`-`uname -m` > docker-compose
          chmod +x docker-compose
          sudo mv docker-compose /usr/local/bin
    # Build the project
    - script:
        name: go build 
        code: |
          export PATH="${PATH}:${GOPATH}/bin"
          if [[ $(go version |grep 1.5) ]]; then export GO15VENDOREXPERIMENT=1 ; fi
          make all
    # Test the project
    - script:
        name: go test
        code: |
          docker --version
          docker-compose -f docker-compose.yml up -d
          docker exec -it shipyard_controller_1 make test
          env